#!/bin/bash

# Installer FUNCTIONS :

# INSTALLER : To fully INSTALL 1Coins and 1Coins-Nicehash (questionnaire)
# ADD : To ADD a specific coin to 1Coins

################## SETUP ##################

source $HOME/Functions

###########################################

################ VARIABLES ################

DIR='/home/m1/8CoinsV2'
BLUE='\033[0;34m'
RED='\033[1;31m'
NC='\033[0m'

WKN=$(echo '_WORKER=$WORKERNAME')
WKN1=$(echo 'WORKER=$WORKERNAME')
ADDREPL=$(echo '_ADDRESS="replace_with_your_address"')
POOLREPL=$(echo '_POOL="replace_with_the_pool_server_without_port"')
POOLPORT=$(echo '_PORT=replace_with_the_pool_port')
PASSREPL=$(echo '_PASSWORD="x"')
OPTS=$(echo '_OPTS=""')

###########################################

################ FUNCTIONS ################

BLAKE_TEST(){
  if [[ $ALG = "Blake (2s)" ]]; then
    ALG="Blake2s"
  fi
  if [[ $ALGO = "Blake (2s)" ]]; then
    ALGO="Blake2s"
  fi
}

COIN_WTM(){
  COINLIST=$(jq '.coins | .[] | .tag' $DIR/Coins.json | sed 's/\"//' | sed 's/\"//')

  echo -e '#####################################################################\n#---- You can add any other coin by following the same template ----#\n#####################################################################\n\n\n' >> $DIR/1Coins
  
  COINTEST="a"
  for COINGEN in $COINLIST; do
    if [ $COINGEN != "NICEHASH" ]; then
      ALGO=$(cat $DIR/Algo.json | jq -r --arg COIN "$COINGEN" '.coins[] | select(.tag==$COIN) | .algorithm')
      BLAKE_TEST
      if (( $(grep -c . <<<"$ALGO") > 1 )); then
        if [ "$COINTEST" == "$COINGEN" ]; then
          continue 2
        else
          COINTEST=$COINGEN
          printf '%s\n' "$ALGO" | while IFS= read -r ALG; do
            BLAKE_TEST
            echo -e "#---- BEGINNING OF ${COINGEN}_$ALG----\n${COINGEN}_${ALG}$WKN1\n${COINGEN}_${ALG}$ADDREPL\n${COINGEN}_${ALG}$POOLREPL\n${COINGEN}_${ALG}$POOLPORT\n${COINGEN}_${ALG}$PASSREPL\n${COINGEN}_${ALG}$OPTS\n#---- END OF ${COINGEN}_${ALG} ----\n\n"  >> $DIR/1Coins
          done
        fi
      else
        echo -e "#---- BEGINNING OF $COINGEN----\n${COINGEN}_${ALG}$WKN1\n${COINGEN}$ADDREPL\n${COINGEN}$POOLREPL\n${COINGEN}$POOLPORT\n${COINGEN}$PASSREPL\n${COINGEN}$OPTS\n#---- END OF $COINGEN ----\n\n"  >> $DIR/1Coins	
      fi
    fi
  done

  echo -e '\n\n\n#####################################################################\n#--- CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM --#\n#####################################################################\n' >> $DIR/1Coins
  
  echo -e "${RED}1Coins has been created!"
  echo -e "Go configure it and restart afterwards!${NC}" 
}

COIN_QUESTION(){
  ALGO=$(cat $DIR/Algo.json | jq -r --arg COIN "$COINGEN" '.coins[] | select(.tag==$COIN) | .algorithm')
  BLAKE_TEST
  if (( $(grep -c . <<<"$ALGO") > 1 )); then
    echo -e ${RED}
    read -p "Multiple algorithms detected, do you want all of them? (y/n) : " CHOICE
    if [ $CHOICE = "y" ]; then
      printf '%s\n' "$ALGO" | while IFS= read -r ALG; do
        BLAKE_TEST
        echo -e "#---- BEGINNING OF ${COINGEN}_$ALG----\n${COINGEN}_${ALG}$WKN\n${COINGEN}_${ALG}$ADDREPL\n${COINGEN}_${ALG}$POOLREPL\n${COINGEN}_${ALG}$POOLPORT\n${COINGEN}_${ALG}$PASSREPL\n${COINGEN}_${ALG}$OPTS\n#---- END OF ${COINGEN}_${ALG} ----\n\n"  >> $DIR/1Coins
      done
    else
      ALG="${ALGO//$'\n'/"/"}"
      read -p "Enter the algorithm you want ($ALG): " ALG
      echo -e "#---- BEGINNING OF ${COINGEN}_$ALG----\n${COINGEN}_${ALG}$WKN\n${COINGEN}_${ALG}$ADDREPL\n${COINGEN}_${ALG}$POOLREPL\n${COINGEN}_${ALG}$POOLPORT\n${COINGEN}_${ALG}$PASSREPL\n${COINGEN}_${ALG}$OPTS\n#---- END OF ${COINGEN}_${ALG} ----\n\n"  >> $DIR/1Coins
    fi
  else
    echo -e "#---- BEGINNING OF $COINGEN----\n${COINGEN}_${ALG}$WKN1\n${COINGEN}$ADDREPL\n${COINGEN}$POOLREPL\n${COINGEN}$POOLPORT\n${COINGEN}$PASSREPL\n${COINGEN}$OPTS\n#---- END OF $COINGEN ----\n\n"  >> $DIR/1Coins	
  fi
}

COIN_ADD(){
  ALGO=$(cat $DIR/Algo.json | jq -r --arg COIN "$COINGEN" '.coins[] | select(.tag==$COIN) | .algorithm')
  BLAKE_TEST
  if (( $(grep -c . <<<"$ALGO") > 1 )); then
    echo -e ${RED}
    read -p "Multiple algorithms detected, do you want all of them? (y/n) : " CHOICE
    if [ $CHOICE = "y" ]; then
      printf '%s\n' "$ALGO" | while IFS= read -r ALG; do
      BLAKE_TEST
      sed -i '7i\#---- BEGINNING OF '${COINGEN}_$ALG'----\n'${COINGEN}_${ALG}$WKN'\n'${COINGEN}_${ALG}$ADDREPL'\n'${COINGEN}_${ALG}$POOLREPL'\n'${COINGEN}_${ALG}$POOLPORT'\n'${COINGEN}_${ALG}$PASSREPL'\n'${COINGEN}_${ALG}$OPTS'\n#---- END OF '${COINGEN}_${ALG}' ----\n\n' $DIR/1Coins
      done
    else
      ALG="${ALGO//$'\n'/"/"}"
      read -p "Enter the algorithm you want ($ALG): " ALG
      sed -i '7i\#---- BEGINNING OF '${COINGEN}_$ALG'----\n'${COINGEN}_${ALG}$WKN'\n'${COINGEN}_${ALG}$ADDREPL'\n'${COINGEN}_${ALG}$POOLREPL'\n'${COINGEN}_${ALG}$POOLPORT'\n'${COINGEN}_${ALG}$PASSREPL'\n'${COINGEN}_${ALG}$OPTS'\n#---- END OF '${COINGEN}_${ALG}' ----\n\n' $DIR/1Coins
    fi
  else
    sed -i '7i\#---- BEGINNING OF '$COINGEN'----\n'${COINGEN}_${ALG}$WKN'\n'${COINGEN}$ADDREPL'\n'${COINGEN}$POOLREPL'\n'${COINGEN}$POOLPORT'\n'${COINGEN}$PASSREPL'\n'${COINGEN}$OPTS'\n#---- END OF '$COINGEN' ----\n\n' $DIR/1Coins	
  fi
}

COIN_NICEHASH(){
  echo -e '###############################################################################\n#---- Edit NICEHASH_WORKER and NICEHASH_ADDRESS with your own information ----#\n###############################################################################\n\n' > $DIR/1Coins-Nicehash
  echo -e 'NICEHASH_WORKER="WORKER_NAME"\nNICEHASH_ADDRESS="NICEHASH_BTC_ADDRESS"\n\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_ETHASH\nNICEHASH_ETHASH_WORKER=$NICEHASH_WORKER\nNICEHASH_ETHASH_POOL="daggerhashimoto.usa.nicehash.com"\nNICEHASH_ETHASH_PORT=3353\nNICEHASH_ETHAS_EXTENSION_ARGUMENTS=""\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_EQUIHASH\nNICEHASH_EQUIHASH_WORKER=$NICEHASH_WORKER\nNICEHASH_EQUIHASH_POOL="stratum+tcp://equihash.usa.nicehash.com"\nNICEHASH_EQUIHASH_PORT=3357\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_LYRA2REV2\nNICEHASH_LYRA2REV2_WORKER=$NICEHASH_WORKER\nNICEHASH_LYRA2REV2_POOL="stratum+tcp://lyra2rev2.usa.nicehash.com"\nNICEHASH_LYRA2REV2_PORT=3347\nNICEHASH_LYRA2REV2_INTENSITY=21\n' >> $DIR/1Coins-Nicehash
  echo -e '# NCIEHASH_NEOSCRYPT\nNICEHASH_NEOSCRYPT_WORKER=$NICEHASH_WORKER\nNICEHASH_NEOSCRYPT_POOL="stratum+tcp://neoscrypt.usa.nicehash.com"\nNICEHASH_NEOSCRYPT_PORT=3341\nNICEHASH_LYRA2REV2_INTENSITY=17\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_CRYPTONIGHT\nNICEHASH_CRYPTONIGHT_WORKER=$NICEHASH_WORKER\nNICEHASH_CRYPTONIGHT_POOL="stratum+tcp://cryptonight.usa.nicehash.com"\nNICEHASH_CRYPTONIGHT_PORT=3355\nNICEHASH_LYRA2REV2_INTENSITY=21\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_X11GOST\nNICEHASH_X11GOST_WORKER=$NICEHASH_WORKER\nNICEHASH_X11GOST_POOL="stratum+tcp://x11gost.usa.nicehash.com"\nNICEHASH_X11GOST_PORT=3359\nNICEHASH_X11GOST_INTENSITY=21\n' >> $DIR/1Coins-Nicehash
  echo -e '# NICEHASH_SKUNKHASH\nNICEHASH_SKUNKHASH_WORKER=$NICEHASH_WORKER\nNICEHASH_SKUNKHASH_POOL="stratum+tcp://skunk.usa.nicehash.com"\nNICEHASH_SKUNKHASH_PORT=3362\nNICEHASH_SKUNKHASH_INTENSITY=21\n' >> $DIR/1Coins-Nicehash
  echo -e "${RED}1Coins-Nicehash has been created!"
  echo -e "Go configure it and restart afterwards!${NC}"
}

###########################################

############## 1COINS - ALGO ##############

INSTALLER(){
  # Download algorithm list if it doesnt exist
  if [ ! -f $DIR/Algo.json ]; then
    echo `/usr/bin/curl -s "https://whattomine.com/calculators.json"` > $DIR/Algo.json
  fi

  # 1COINS - OPTIONS
  if [ ! -f $DIR/1Coins ]; then 
    echo -e "${RED}1Coins hasnt been created yet"
    echo -e "${BLUE}3 options is offered :"
    echo -e "1) Create a file with all the coins (including NiceHash)"
    echo -e "2) Create a file with the top coin for your GPUs"
    echo -e "3) Create a custom file with the coin you want"
    echo -e "4) Create a file for NiceHash"
    read -p "Choose between option 1, 2, 3 or 4 (1/2/3/4) : " CHOICE
  
    #CHOICE 1 - ALL COINS
 
    if [ $CHOICE = 1 ]; then
      echo `/usr/bin/curl -s "https://whattomine.com/calculators.json"` > $DIR/Coins.json
      COIN_NICEHASH
      COIN_WTM 
      exit
    fi
    
    #CHOICE 2 - TOP COINS
     
    if [ $CHOICE = 2 ]; then
      GPU_MODEL
      echo `/usr/bin/curl -s "https://whattomine.com/coins.json?utf8=%E2%9C%93%26adapt_q_280x=0%26adapt_q_380=0%26adapt_q_fury=0%26adapt_q_470=0%26adapt_q_480=0%26adapt_q_570=0%26adapt_q_580=0%26adapt_q_vega56=0%26adapt_q_vega64=0%26adapt_q_750Ti=0%26adapt_750Ti=true%26adapt_q_1050Ti=0%26adapt_q_10606=0%26adapt_10606=true%26adapt_q_1070=0%26adapt_q_1070Ti=0%26adapt_q_1080=0%26adapt_q_1080Ti=0%26eth=true%26factor%5Beth_hr%5D=${HR_ETHASH}%26factor%5Beth_p%5D=405.0%26grof=true%26factor%5Bgro_hr%5D=${HR_GROESTL}%26factor%5Bgro_p%5D=450.0%26x11gf=true%26factor%5Bx11g_hr%5D=${HR_X11GOST}%26factor%5Bx11g_p%5D=420.0%26cn=true%26factor%5Bcn_hr%5D=${HR_CRYPTONIGHT}%26factor%5Bcn_p%5D=330.0%26eq=true%26factor%5Beq_hr%5D=${HR_EQUIHASH}%26factor%5Beq_p%5D=360.0%26lre=true%26factor%5Blrev2_hr%5D=${HR_LYRA2REV2}%26factor%5Blrev2_p%5D=390.0%26ns=true%26factor%5Bns_hr%5D=${HR_NEOSCRYPT}%26factor%5Bns_p%5D=450.0%26lbry=true%26factor%5Blbry_hr%5D=${HR_LBRY}%26factor%5Blbry_p%5D=525.0%26bk2bf=true%26factor%5Bbk2b_hr%5D=${HR_BLAKE2S}%26factor%5Bbk2b_p%5D=630.0%26bk14=true%26factor%5Bbk14_hr%5D=${HR_BLAKE14R}%26factor%5Bbk14_p%5D=570.0%26pas=true%26factor%5Bpas_hr%5D=${HR_PASCAL}%26factor%5Bpas_p%5D=405.0%26skh=true%26factor%5Bskh_hr%5D=${HR_SKUNKHASH}%26factor%5Bskh_p%5D=345.0%26n5=true%26factor%5Bn5_hr%5D=${HR_NIST5}%26factor%5Bn5_p%5D=345.0%26factor%5Bl2z_hr%5D=420.0%26factor%5Bl2z_p%5D=300.0%26factor%5Bcost%5D=0.1%26sort=Profit%26volume=0%26revenue=Current%26factor%5Bexchanges%5D%5B%5D=%26factor%5Bexchanges%5D%5B%5D=abucoins%26factor%5Bexchanges%5D%5B%5D=bitfinex%26factor%5Bexchanges%5D%5B%5D=bittrex%26factor%5Bexchanges%5D%5B%5D=binance%26factor%5Bexchanges%5D%5B%5D=cryptopia%26factor%5Bexchanges%5D%5B%5D=hitbtc%26factor%5Bexchanges%5D%5B%5D=poloniex%26factor%5Bexchanges%5D%5B%5D=yobit%26dataset=%26commit=Calculate"` >> $DIR/Coins.json
      
      COIN_WTM
      exit
    fi
  
    #CHOICE 3 - CUSTOM
  
    if [ $CHOICE = 3 ]; then
      echo -e '#####################################################################\n#---- You can add any other coin by following the same template ----#\n#####################################################################\n\n\n' >> $DIR/1Coins
      while [[ ${CFG_CONTINUE} != "n" ]]; do
        echo -e "${BLUE}"
        read -p "Enter the symbol of the coin you want to configure (Ex: Zencash = ZEN) : " COINGEN
        COIN_QUESTION
        echo -e ${BLUE}
        read -p "Configure another coin? (y/n) : " CFG_CONTINUE
      done 
      echo -e '\n\n\n#####################################################################\n#--- CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM - CUSTOM --#\n#####################################################################\n' >> $DIR/1Coins
      echo -e "${RED}1Coins has been created!"
      echo -e "Go configure it and restart afterwards!${NC}"
      exit
    fi
  
    if [ $CHOICE = 4 ]; then
      COIN_NICEHASH
    fi
  fi
}

ADD(){
  while [[ ${CFG_CONTINUE} != "n" ]]; do
    echo -e "${BLUE}"
    read -p "Enter the symbol of the coin you want to configure (Ex: Zencash = ZEN) : " COINGEN
    COIN_ADD
    echo -e ${BLUE}
    read -p "Configure another coin? (y/n) : " CFG_CONTINUE
    echo -e "${NC}"
  done
  echo -e "${RED}1Coins has been created!"
  echo -e "Go configure it and restart afterwards!${NC}"
  exit 
}
###########################################


#!/bin/bash

##########################################################################
##########################################################################
#################                                        #################
##############                                              ##############
##########                                                      ##########
##########################################################################
##########################################################################

CHOSN_Ver="CHOSN v0000-0.0 - By NESCI,Moi162001"
CHOSN_Coin_ver="v0000-.0.002"   # Do not edit this

# Changelog:

# 
# Removed repetitive GPUFanControlState setting, it only needs to be set once, not every cycle (prevent API overload)
# Workaround for some 1050's reporting "Unknown" or "ERR" when power.draw is queried from nvidi-smi
#

################## TO DO ##################

# ADD CC_OR_CG VARIABLE IN 1BASH FOR SCRYPT ALGORITHM
# RENAME VARIABLES FOR DUAL CHOICES (ZM_EWBF, CC_CG, CG_SG)

###########################################

########## DONT TOUCH BELOW THIS LINE ############
source ~/1bash
source ~/Resources
source ~/8coinscfg
3Main_Coin_Sequence(){
CHECK_CARD
CHECK_I
miner_fix2

######## Paths of the miners ##################

$ETHMINER='/home/m1/Miners/eth/ethminer/ethminer' # ethminer this program is a binary the update is simple - Ethereum
$CCMINER='/home/m1/Miners/ccminer/ccminer' # -All other
$CCMINERXEVAN='/home/m1/Miners/ccminer-xevan/ccminer' # special ccminer-xevan
$ZM='/home/m1/Miners/zec/zm/zm'		# zm this program is a binary the update is simple? - Equihash
$EWBF='/home/m1/Miners/zec/ewbf/ewbf'	# ewbf this program is a binary the update is simple - Equihash
$OPTIMINER='/home/m1/Miners/optiminer-equihash/optiminer-equihash'
$ALCCMINER = '/home/m1/Miners/alccminer/ccminer'

# $cgminer = '/home/m1/Miners/cgminer/cgminer'# cgminer this program is a binary the update is simple - multi algo
# $vertminer='/home/m1/Miners/vertminer/ccminer'
# $kxccminer='/home/m1/Miners/KXccminer-skunk/ccminer'
# $tpccminer='/home/m1/Miners/TPccminer/ccminer'
# $claymore='/home/m1/Miners/eth/$CLAYMORE_VERSION/ethdcrminer64'
# $GenoilU='/home/m1/Miners/eth/Genoil-U/ethminer'

########## DONT TOUCH ABOVE THIS LINE ############

##################################################


COIN=$COIN


# Download algorithm list if it doesnt exist

if [ ! -f $HOME/8Coins/Algo.json ]; then
    echo `/usr/bin/curl -s https://whattomine.com/calculators.json` > $HOME/8Coins/Algo.json
fi

# Generate 1Coins-Nicehash and 1Coins if they dont exist
if [ ! -f $HOME/1Coins.json ] || [ ! -f $HOME/1Coins-Nicehash.json ]; then
	rm $HOME/8Coins/Coins.json
	rm $HOME/1Coins
	rm $HOME/1Coins-Nicehash
	echo `/usr/bin/curl -s http://whattomine.com/coins.json?utf8=%E2%9C%93&adapt_q_280x=0&adapt_q_380=0&adapt_q_fury=0&adapt_q_470=0&adapt_q_480=3&adapt_q_570=0&adapt_q_580=0&adapt_q_vega56=0&adapt_q_vega64=0&adapt_q_750Ti=0&adapt_q_1050Ti=0&adapt_q_10606=6&adapt_10606=true&adapt_q_1070=0&adapt_q_1070Ti=0&adapt_q_1080=0&adapt_q_1080Ti=0&eth=true&factor%5Beth_hr%5D=135.0&factor%5Beth_p%5D=540.0&grof=true&factor%5Bgro_hr%5D=123.0&factor%5Bgro_p%5D=540.0&x11gf=true&factor%5Bx11g_hr%5D=43.2&factor%5Bx11g_p%5D=540.0&cn=true&factor%5Bcn_hr%5D=2580.0&factor%5Bcn_p%5D=420.0&eq=true&factor%5Beq_hr%5D=1620.0&factor%5Beq_p%5D=540.0&lre=true&factor%5Blrev2_hr%5D=121800.0&factor%5Blrev2_p%5D=540.0&ns=true&factor%5Bns_hr%5D=3000.0&factor%5Bns_p%5D=540.0&lbry=true&factor%5Blbry_hr%5D=1020.0&factor%5Blbry_p%5D=540.0&bk2bf=true&factor%5Bbk2b_hr%5D=5940.0&factor%5Bbk2b_p%5D=480.0&bk14=true&factor%5Bbk14_hr%5D=9300.0&factor%5Bbk14_p%5D=540.0&pas=true&factor%5Bpas_hr%5D=3480.0&factor%5Bpas_p%5D=540.0&skh=true&factor%5Bskh_hr%5D=108.0&factor%5Bskh_p%5D=540.0&factor%5Bl2z_hr%5D=420.0&factor%5Bl2z_p%5D=300.0&factor%5Bcost%5D=0.1&sort=Profit&volume=0&revenue=current&factor%5Bexchanges%5D%5B%5D=&factor%5Bexchanges%5D%5B%5D=abucoins&factor%5Bexchanges%5D%5B%5D=bitfinex&factor%5Bexchanges%5D%5B%5D=bittrex&factor%5Bexchanges%5D%5B%5D=bleutrade&factor%5Bexchanges%5D%5B%5D=cryptopia&factor%5Bexchanges%5D%5B%5D=hitbtc&factor%5Bexchanges%5D%5B%5D=poloniex&factor%5Bexchanges%5D%5B%5D=yobit&dataset=&commit=Calculate` > $HOME/8Coins/Coins.json
	COINLIST=$(jq '.coins | .[] | .tag' $HOME/8Coins/Coins.json | sed 's/\"//' | sed 's/\"//')
	WKN=$(echo '_WORKER=$WORKERNAME')
	ADDREPL=$(echo '_ADDRESS="replace_with_your_address - Account.WorkerName if on Suprnova"')
	POOLREPL=$(echo '_POOL="replace_with_the_pool_server"')
	POOLPORT=$(echo '_PORT="replace_with_the_pool_port"')
	PASSREPL=$(echo '_PASSWORD="x"')
	SYMBREPL=$(echo '_SYMBOL=" "')

	echo -e "#---- You can add any other coin by following the same template ----\n#---- If you get the message to enter the algorithm manually, add : ----\n# (COIN-SYMBOL)_ALGO=COIN_ALGORITHM\n#Example : ZEN_ALGO=EQUIHASH" >> $HOME/1Coins
	
	echo -e "#---- You can add any other coin by following the same template ----\n#---- If you get the message to enter the algorithm manually, add : ----\n# (COIN-SYMBOL)_ALGO=COIN_ALGORITHM\n#Example : ZEN_ALGO=EQUIHASH" >> $HOME/1Coins-Nicehash
	
	for COINGEN  in $COINLIST; do
		if [ `expr "$COIGEN" : ".*[-].*"` -gt 0 ]; then
			echo -e "#----  BEGINNING OF $COINGEN----\n#Fill in your informations and uncomment the lines below\n#${COINGEN}$WKN\n#${COINGEN}$ADDREPL\n#${COINGEN}$POOLREPL\n#${COINGEN}POOLPORT\n#${COINGEN}$PASSREPL\n#${COINGEN}$SYMBREPL\n#----  END OF $COINGEN ----"  >> $HOME/1Coins-Nicehash
		elif
			echo -e "#----  BEGINNING OF $COINGEN----\n#Fill in your informations and uncomment the lines below\n#${COINGEN}$WKN\n#${COINGEN}$ADDREPL\n#${COINGEN}$POOLREPL\n#${COINGEN}POOLPORT\n#${COINGEN}$PASSREPL\n#${COINGEN}$SYMBREPL\n#----  END OF $COINGEN ----"  >> $HOME/1Coins
	done
fi

ALGO=$(cat $HOME/8Coins/Algo.json | jq -r --arg COIN "$COIN" '.coins[] | select(.tag==$COIN) | .algorithm')
if [ -z "$ALGO" ]; then
	$ALGO=${COIN}_ALGO
fi
COINLISTWTM=$(jq '.coins | .[] | .tag' $HOME/8Coins/Algo.json | sed 's/\"//' | sed 's/\"//')
echo "Selected coin is : $COIN"
echo "Algorithm is : $ALGO"

WORKER=${COIN}_WORKER
ADDRESS=${COIN}_ADDRESS
POOL=${COIN}_POOL
PORT=${COIN}_PORT
PASSWORD=${COIN}_PASSWORD
SYMBOL=${COIN}_SYMBOL

# ZM or EWBF - EQUIHASH
elif [ $ALGO = "Equihash" ];  then   
  ZM_OR_EWBF=$ZM_or_EWBF
  if [ $ZM_OR_EWBF = "ZM" ]; then
    echo "$ALGO - Opening ZM"
	ZM
  elif [ $ZM_OR_EWBF = "EWBF" ]; then
    echo "$ALGO - Opening EWBF"
	EWBF
  else 
    echo "Error in your ZM_or_EWBF variable in 1bash"
    exit
  fi

# CCMINER or CGMINER - SCRYPT
elif [ $ALGO = "Scrypt" ];  then   
  CC_OR_CG=$CC_OR_CG
  if [ $CC_OR_CG = "CC" ]; then
    echo "$ALGO - Opening CCMiner"
	CCMINER
  elif [ $CC_OR_CG = "CG" ]; then
    echo "$ALGO - Opening CGMiner"
	CGMINER
  else 
    echo "Error in your CC_OR_CG variable in 1bash"
    exit
  fi

elif [ $ALGO = "X11" ];  then   
	echo "$ALGO - Opening ALCCMiner"
	ALCCMINER
	
# ETHMINER - HASHIMOTO
elif [ $ALGO = "Hashimoto" ]; then 
	echo "$ALGO - Opening Ethmminer" 
	ETHMINER

# XEVAN
elif [ $ALGO = "Xevan" ];  then 
	echo "$ALGO - Opening CCMiner-Xevan" 
	CCMINERXEVAN
  
# X17
elif [ $ALGO = "X17" ]; then
	echo "$ALGO - Opening ALCCMiner" 
	ALCCMINER

# OPTIMINER - MIX
elif [ $ALGO = "Equi192,7" ] || [ $ALGO = "Mars" ]; then
	echo "$ALGO - Opening Optiminer"
	OPTIMINER

# CCMINER - MIX
elif [ $ALGO = "Lyra2rev2" ] || [ $ALGO = "Skunkhashs" ] || [ $ALGO = "Lyra2Z" ] || [ $ALGO = "Myriad-Groestl" ] || [ $ALGO = "Blake14" ] || [ $ALGO = "C11" ] || [ $ALGO = "Qubit" ] || [ $ALGO = "LBRY" ] || [ $ALGO = "Groestl" ]; then
	echo "$ALGO - Opening CCMiner" 
	CCMINER

# CGMINER - MIX
elif [ $ALGO = "SHA-256" ] || [ $ALGO = "Polytimos" ] || [ $ALGO = "CryptoNight" ] || [ $ALGO = "Keccak" ] || [ $ALGO = "Timetraval10" ] || [ $ALGO = "X11-GOST" ] || [ $ALGO = "Skein" ]
	echo "$ALGO - Opening CGMiner"
	CGMINER
fi

ZM() {
	screen -dmSL miner $ZM --server $POOL --user $ADDRESS --pass $PASSWORD --port $PORT --telemetry 127.0.0.1:42000
	exit
}

EWBF() {
	screen -dmSL miner $EWBF --server $POOL --user $ADDRESS --pass $PASSWORD --port $PORT --api 127.0.0.1:42000
	exit
}

CCMINER() {
	POOL=$POOL ":" $PORT
	screen -dmSL miner $CCMINER -a $ALGO -o $POOL -u $ADDRESS -p $PASSWORD ############# -i $OCIT
	exit
}

CGMINER() {
	##########
	exit
}

ALCCMINER() {
	POOL=$POOL ":" $PORT
	screen -dmSL miner $ALCCMINER -a $ALGO -o $POOL -u $ADDRESS -p $PASSWORD ######## -i $OCIT
	exit
}

ETHMINER() {
	##########
	exit
}

CCMINERXEVAN() {
	##########
	exit
}

OPTIMINER() {
	POOL=$POOL ":" $PORT
	export GPU_FORCE_64BIT_PTR=1
	screen -dmSL miner $OPTIMINER -s $POOL -u $ADDRESS -p $PASSWORD -a $ALGO
	exit
}

#!/bin/bash

##########################################################################
##########################################################################
#################                                        #################
##############                                              ##############
##########                                                      ##########
##########################################################################
##########################################################################

CHOSN_Ver="CHOSN v0000-0.0 - By NESCI,Moi162001"
CHOSN_Coin_ver="v0000-.0.002"   # Do not edit this

# Changelog:

################## TO DO ##################

# ADD CC_OR_CG VARIABLE IN 1BASH FOR SCRYPT ALGORITHM
# RENAME VARIABLES FOR DUAL CHOICES (ZM_EWBF, CC_CG, CG_SG)

###########################################

########## DONT TOUCH BELOW THIS LINE ############
source ~/1bash
source ~/1Coins
source ~/1Coins-Nicehash

DIR="/home/m1/8CoinsV2"
rm $DIR/Coins.json
rm $DIR/1Coins
rm $DIR/1Coins-Nicehash
rm $DIR/Algo.json

######## Paths of the miners ##################

ETHMINER="$HOME/Miners/eth/ethminer/ethminer" # ethminer this program is a binary the update is simple - Ethereum
CCMINER='/home/m1/Miners/ccminer/ccminer' # -All other
CCMINERXEVAN='/home/m1/Miners/ccminer-xevan/ccminer' # special ccminer-xevan
ZM='/home/m1/Miners/zec/zm/zm'		# zm this program is a binary the update is simple? - Equihash
EWBF='/home/m1/Miners/zec/ewbf/ewbf'	# ewbf this program is a binary the update is simple - Equihash
# OPTIMINER='/home/m1/Miners/optiminer-equihash/optiminer-equihash'
ALCCMINER='/home/m1/Miners/alccminer/ccminer'

# $cgminer = '/home/m1/Miners/cgminer/cgminer'# cgminer this program is a binary the update is simple - multi algo
# $vertminer='/home/m1/Miners/vertminer/ccminer'
# $kxccminer='/home/m1/Miners/KXccminer-skunk/ccminer'
# $tpccminer='/home/m1/Miners/TPccminer/ccminer'
# $claymore='/home/m1/Miners/eth/$CLAYMORE_VERSION/ethdcrminer64'
# $GenoilU='/home/m1/Miners/eth/Genoil-U/ethminer'

########## DONT TOUCH ABOVE THIS LINE ############

##################################################

# Download algorithm list if it doesnt exist

if [ ! -f $DIR/Algo.json ]; then
  echo `/usr/bin/curl -s https://whattomine.com/calculators.json` > $DIR/Algo.json
fi

# Generate 1Coins-Nicehash and 1Coins if they dont exist
if [ ! -f $DIR/1Coins ] || [ ! -f $DIR/1Coins-Nicehash ]; then
  echo `/usr/bin/curl -s https://whattomine.com/coins.json?utf8=%E2%9C%93&adapt_q_280x=0&adapt_q_380=0&adapt_q_fury=0&adapt_q_470=0&adapt_q_480=3&adapt_q_570=0&adapt_q_580=0&adapt_q_vega56=0&adapt_q_vega64=0&adapt_q_750Ti=0&adapt_q_1050Ti=0&adapt_q_10606=6&adapt_10606=true&adapt_q_1070=6&adapt_1070=true&adapt_q_1070Ti=6&adapt_1070Ti=true&adapt_q_1080=6&adapt_1080=true&adapt_q_1080Ti=6&adapt_1080Ti=true&eth=true&factor[eth_hr]=847.8&factor[eth_p]=3750.0&grof=true&factor[gro_hr]=1158.0&factor[gro_p]=4200.0&x11gf=true&factor[x11g_hr]=389.4&factor[x11g_p]=3870.0&cn=true&factor[cn_hr]=18600.0&factor[cn_p]=3000.0&eq=true&factor[eq_hr]=14430.0&factor[eq_p]=3900.0&lre=true&factor[lrev2_hr]=1243800.0&factor[lrev2_p]=4080.0&ns=true&factor[ns_hr]=30060.0&factor[ns_p]=4080.0&lbry=true&factor[lbry_hr]=9420.0&factor[lbry_p]=4020.0&bk2bf=true&factor[bk2b_hr]=56040.0&factor[bk2b_p]=3960.0&bk14=true&factor[bk14_hr]=86100.0&factor[bk14_p]=4170.0&pas=true&factor[pas_hr]=33480.0&factor[pas_p]=4140.0&skh=true&factor[skh_hr]=966.0&factor[skh_p]=4020.0&factor[l2z_hr]=420.0&factor[l2z_p]=300.0&factor[cost]=0.1&sort=Profit&volume=0&revenue=current&factor[exchanges][]=&factor[exchanges][]=abucoins&factor[exchanges][]=bitfinex&factor[exchanges][]=bittrex&factor[exchanges][]=bleutrade&factor[exchanges][]=cryptopia&factor[exchanges][]=hitbtc&factor[exchanges][]=poloniex&factor[exchanges][]=yobit&dataset=&commit=Calculate` >> $DIR/Coins.json

  COINLIST=$(jq '.coins | .[] | .tag' $DIR/Coins.json | sed 's/\"//' | sed 's/\"//')
  WKN=$(echo '_WORKER=$WORKERNAME')
  ADDREPL=$(echo '_ADDRESS="replace_with_your_address - Account.WorkerName if on Suprnova"')
  POOLREPL=$(echo '_POOL="replace_with_the_pool_server without port"')
  POOLPORT=$(echo '_PORT="replace_with_the_pool_port"')
  PASSREPL=$(echo '_PASSWORD="x" # or Symbole c=')
  # SYMBREPL=$(echo '_SYMBOL=" "')

  echo -e '########################################################################\n#---- You can add any other coin by following the same template ----\n#---- If you get the message to enter the algorithm manually, add : ----\n# (COIN-SYMBOL)_ALGO="'COIN_ALGORITHM'"\n# Example : ZEN_ALGO="'EQUIHASH'"\n########################################################################\n\n\n' >> $DIR/1Coins
  echo -e '########################################################################\n#---- You can add any other coin by following the same template ----\n#---- If you get the message to enter the algorithm manually, add : ----\n# (COIN-SYMBOL)_ALGO="'COIN_ALGORITHM'"\n# Example : ZEN_ALGO="'EQUIHASH'"\n########################################################################\n\n\n' >> $DIR/1Coins-Nicehash

  for COINGEN in $COINLIST; do
    if [ $COINGEN != "Nicehash" ]; then
      echo -e "#---- BEGINNING OF $COINGEN----\n#Fill in your informations and uncomment the lines below\n#${COINGEN}$WKN\n#${COINGEN}$ADDREPL\n#${COINGEN}$POOLREPL\n#${COINGEN}_PORT\n#${COINGEN}$PASSREPL\n#${COINGEN}$SYMBREPL\n#---- END OF $COINGEN ----\n"  >> $DIR/1Coins	
    fi
  done

  COINLIST=$(jq -c '[paths|.[1:2]]|unique' $DIR/Coins.json | sed 's/\[]//g' | sed 's/\["//g' | sed 's/\"]//g' | sed 's/,/ /g' | sed 's/\s*(\s*/(/g')
  
  for COINGEN in $COINLIST; do
    if [ ${COINGEN:0:8} = "Nicehash" ]; then
      echo -e "#---- BEGINNING OF $COINGEN----\n#Fill in your informations and uncomment the lines below\n#${COINGEN}$WKN\n#${COINGEN}$ADDREPL\n#${COINGEN}$POOLREPL\n#${COINGEN}_PORT\n#${COINGEN}$PASSREPL\n#${COINGEN}$SYMBREPL\n#---- END OF $COINGEN ----\n"  >> $DIR/1Coins-Nicehash
    fi
  done
fi

ALGO=$(cat $DIR/Algo.json | jq -r --arg COIN "$COIN" '.coins[] | select(.tag==$COIN) | .algorithm')
if [ -z "$ALGO" ]; then
  echo "ENTER THE ALGORITHM MANUALLY"
  $ALGO=${COIN}_ALGO
fi

COINLISTWTM=$(jq '.coins | .[] | .tag' $DIR/Algo.json | sed 's/\"//' | sed 's/\"//')
echo "Selected coin is : $COIN"
echo "Algorithm is : $ALGO"

##################DYNAMIC VARIABLES####################
WORKER=${COIN}_WORKER
ADDRESS=${COIN}_ADDRESS.$WORKER
POOL=${COIN}_POOL
PORT=${COIN}_PORT
POOLSTRATUM=$POOL.$PORT   
PASSWORD=${COIN}_PASSWORD
# SYMBOL=${COIN}_SYMBOL
echo $WORKER
echo $ADDRESS
echo $POOL
echo $PORT
echo $PASSWORD
# echo $SYMBOL


##################DYNAMIC VARIABLES####################

# ZM or EWBF - EQUIHASH
if [ $ALGO = "Equihash" ]; then   
  ZM_OR_EWBF=$ZM_or_EWBF
  if [ $ZM_OR_EWBF = "ZM" ]; then
    echo "$ALGO - Opening ZM"
    MINSOFT=$ZM
  fi
  if [ $ZM_OR_EWBF = "EWBF" ]; then
    echo "$ALGO - Opening EWBF"
    MINSOFT=$EWBF
  else 
    echo "Error in your ZM_or_EWBF variable in 1bash"
    exit
  fi
fi 

# CCMINER or CGMINER - SCRYPT
if [ $ALGO = "Scrypt" ]; then   
# CC_OR_CG=$CC_OR_CG
# if [ $CC_OR_CG = "CC" ]; then
    #echo "$ALGO - Opening CCMiner"
    MINSOFT=$CCMINER
    echo $MINSOFT
    #  fi
#  if [ $CC_OR_CG = "CG" ]; then
#    echo "$ALGO - Opening CGMiner"
#    CGMINER
#  else 
#    echo "Error in your CC_OR_CG variable in 1bash"
#    exit
#  fi
fi

if [ $ALGO = "X11" ]; then   
  echo "$ALGO - Opening ALCCMiner"
  MINSOFT=$ALCCMINER
fi
	
# ETHMINER - HASHIMOTO
if [ $ALGO = "Hashimoto" ]; then 
  echo "$ALGO - Opening Ethmminer" 
  MINSOFT=$ETHMINER
fi

# XEVAN
if [ $ALGO = "Xevan" ];  then 
  echo "$ALGO - Opening CCMiner-Xevan" 
  MINSOFT=$CCMINERXEVAN
fi
  
# X17
if [ $ALGO = "X17" ]; then
  echo "$ALGO - Opening ALCCMiner" 
  MINSOFT=$ALCCMINER
fi

# OPTIMINER - MIX
# if [ $ALGO = "Equi192,7" ] || [ $ALGO = "Mars" ]; then
#  echo "$ALGO - Opening Optiminer"
#  OPTIMINER
# fi

# CCMINER - MIX
if [ $ALGO = "Lyra2rev2" ] || [ $ALGO = "Skunkhashs" ] || [ $ALGO = "Lyra2Z" ] || [ $ALGO = "Myriad-Groestl" ] || [ $ALGO = "Blake14" ] || [ $ALGO = "C11" ] || [ $ALGO = "Qubit" ] || [ $ALGO = "LBRY" ] || [ $ALGO = "Groestl" ] || [ $ALGO = "Mars" ]; then
  echo "$ALGO - Opening CCMiner" 
  MINSOFT=$CCMINER
fi

# CGMINER - MIX
# if [ $ALGO = "SHA-256" ] || [ $ALGO = "Polytimos" ] || [ $ALGO = "CryptoNight" ] || [ $ALGO = "Keccak" ] || [ $ALGO = "Timetraval10" # ] || [ $ALGO = "X11-GOST" ] || [ $ALGO = "Skein" ]
#  echo "$ALGO - Opening CGMiner"
#  CGMINER
# fi

###################################################
#### set Miners
###################################################

ZMEWBFSET=$(echo "--server $POOL --user $ADDRESS --pass $PASSWORD --port $PORT --api 127.0.0.1:42000")
CCMINERSET=$(echo "-a $ALGO -o $POOLSTRATUM -u $ADDRESS -p $PASSWORD -i $OCIT") 
ETHSET=$(echo "-G -S -SP 2 $POOLSTRATUM -O $ADDRESS -p $PASSWORD") 

echo $ZMZWBFSET
echo $CCMINERSET
echo $ETHSET

####### and run ########

if [ "$MINSOFT" == "$ZM_OR_EWBF" ]; then
 echo $MINSOFT $ZMEWBFSET

 # screen -dmSL miner $MINSOFT $ZMEWBFSET
#fi
elif [ "$MINSOFT" == "$CCMINER" ] || [ "$MINSOFT" == "$CCMINERXEVAN" ] || [ "$MINSOFT" == "$ALCCMINER" ]; then
 echo "$MINSOFT $CCMINERSET"
# screen -dmSL miner $MINSOFT $CCMINERSET
# fi
elif [ "$MINSOFT" == "$ETHMINER" ]; then
    echo "$MINSOFT $ETHSET"
# screen -dmSL miner $MINSOFT $ETHSET
fi
